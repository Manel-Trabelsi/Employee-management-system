name: Build, Publish and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
env:
  PROJECT_NAME: app
  CONTAINER_REGISTRY: trabelsihammamimanel/pfe-project

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy to AKS
    runs-on: ubuntu-latest

    steps:
      # ==========================
      # Step 1: Checkout the repository
      # ==========================
      - name: Checkout repository
        uses: actions/checkout@v2

      # ==========================
      # Step 2: Login to Docker Hub
      # ==========================
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ==========================
      # Step 3: Build Docker Image
      # ==========================
      - name: Build Docker Image
        run: |
          echo "Building the Docker image..."
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)

          # Build the image with the short SHA
          docker build -t ${{ env.CONTAINER_REGISTRY }}:app-$SHORT_SHA .
          
          echo "==> Docker Images List:"
          docker images

      # ==========================
      # Step 4: Push Docker Image to Docker Hub
      # ==========================
      - name: Push Docker Image
        run: |
          echo "Pushing Docker image to Docker Hub..."
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)

          # Push the image to Docker Hub
          docker push "${{ env.CONTAINER_REGISTRY }}:app-$SHORT_SHA"
      
      # ==========================
      # Step 5: Azure Login
      # ==========================
      #- name: Checkout code
      #  uses: actions/checkout@v3
        
      #- name: Log in to Azure
      #  uses: azure/login@v2
      #  with:
      #    creds: |
      #      {
      #        "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
      #        "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
      #        "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
      #        "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
      #      }
          

      # ==========================
      # Step 6: Get AKS credentials
      # ==========================
      #- name: Get AKS credentials
      #  run: |
      #    az aks get-credentials --resource-group pfe-rg --name aks-cluster --overwrite-existing

      
      # ==========================
      # Step 5: AWS Login
      # ==========================
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ==========================
      # Step 6: Get EKS credentials
      # ==========================
      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --region us-east-1 --name eks-cluster
      
      # ==========================
      # Step 7: Clone Helm Chart Repository
      # ==========================
      - name: Clone Helm Chart Repository
        run: |
          git clone https://github.com/Manel-Trabelsi/Main-Helm-Chart.git helm-chart

      # ==========================
      # Step 8: Deploy to AKS with Helm
      # ==========================
      - name: Deploy to AKS or EKS with Helm ...
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          helm upgrade --install app ./helm-chart \
            --namespace app --create-namespace \
            --set image.App.Tag="app-$SHORT_SHA"
